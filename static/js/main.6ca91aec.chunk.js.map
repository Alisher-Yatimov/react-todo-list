{"version":3,"sources":["redux/actionTypes.js","assets/notepad.svg","components/middleware/localStorage.js","redux/reducers.js","components/Header/index.js","components/Header/Header.jsx","components/AddTodoForm/AddTodoForm.jsx","redux/actions.js","components/AddTodoForm/index.js","components/EditForm/EditForm.jsx","components/Todo/Todo.jsx","components/TodoList/TodoList.jsx","App.js","index.js"],"names":["ADD_TODO","REMOVE_TODO","TOGGLE_TODO","EDIT_TODO","module","exports","writeToLocalStorage","name","data","localStorage","setItem","JSON","stringify","require","initialState","getItem","parse","readLocalStorage","Header","className","src","logo","alt","mapDispatchToProps","addTodo","text","type","AddTodoForm","connect","state","todos","useState","todo","setTodo","useEffect","onSubmit","e","preventDefault","target","value","vaule","onChange","EditForm","editTodo","todoText","removeTodo","id","toggleTodo","todoId","classes","editMode","setEditMode","onClick","length","map","classList","done","key","_id","App","store","createStore","action","Date","now","filter","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+GAAA,kLAAO,IAAMA,EAAW,WACXC,EAAc,cACdC,EAAc,cACdC,EAAY,a,4BCHzBC,EAAOC,QAAU,IAA0B,qC,wRCApC,SAASC,EAAoBC,EAAMC,GACxCC,aAAaC,QAAQH,EAAMI,KAAKC,UAAUJ,I,MCCcK,EAAQ,GAA1Db,E,EAAAA,SAAUC,E,EAAAA,YAAaC,E,EAAAA,YAAaC,E,EAAAA,UACtCW,EAAY,UDCX,SAA0BP,GAC/B,IAAMC,EAAOC,aAAaM,QAAQR,GAClC,OAAOI,KAAKK,MAAMR,GCHCS,CAAiB,gBAApB,QAAgC,G,+BCFnCC,MCGA,WACb,OACE,yBAAKC,UAAU,UACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,QACb,yBAAKC,IAAKC,IAAMC,IAAI,SACpB,+C,oBCwBV,IAAMC,EAAqB,CACzBC,QCjCK,SAAiBC,GACtB,MAAO,CACLC,KAAM1B,WACNyB,UCJWE,EFyCAC,aALS,SAAAC,GACtB,MAAO,CACLC,MAAOD,KAG6BN,EAAzBK,EApCf,YAAwC,IAAlBJ,EAAiB,EAAjBA,QAASM,EAAQ,EAARA,MAAQ,EACbC,mBAAS,IADI,mBAC9BC,EAD8B,KACxBC,EADwB,KAgBrC,OAdAC,qBAAU,WACR5B,EAAoB,QAASwB,MAc7B,yBAAKX,UAAU,iBACb,yBAAKA,UAAU,aACb,0BAAMA,UAAU,OAAOgB,SAbP,SAAAC,GACpBA,EAAEC,iBACFD,EAAEE,OAAON,KAAKO,MAAQ,GACtBf,EAAQQ,KAWF,2BAAON,KAAK,OAAOnB,KAAK,OAAOiC,MAAOR,EAAMS,SARpD,SAAqBL,GACnBH,EAAQG,EAAEE,OAAOC,UAQX,4BAAQb,KAAK,UAAb,a,MGxBK,SAASgB,EAAT,GAAyC,IAAtBC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,SAAW,EAC7Bb,mBAASa,GADoB,mBAC9CZ,EAD8C,KACxCC,EADwC,KAErD,OACE,0BAAME,SAAUQ,EAAUxB,UAAU,YAClC,2BAAOO,KAAK,OAAOnB,KAAK,OAAOkC,SAAU,SAAAL,GAAC,OAAIH,EAAQG,EAAEE,OAAOC,QAAUA,MAAOP,IAChF,4BAAQN,KAAK,UAAb,W,MCmBN,IAKeE,eALS,SAAAC,GACtB,MAAO,CACLC,MAAOD,KAG6B,CAACgB,WHvBlC,SAAoBC,GACzB,MAAO,CACLpB,KAAMzB,cACN6C,OGoBiDC,WHhB9C,SAAoBD,GACzB,MAAO,CACLpB,KAAMxB,cACN4C,OGa6DH,SHT1D,SAAkBlB,EAAMqB,GAC7B,MAAO,CACLpB,KAAMvB,YACN2C,KACArB,UGKWG,EAzBf,YAA8E,IAA/DgB,EAA8D,EAA9DA,SAAUC,EAAoD,EAApDA,WAAYG,EAAwC,EAAxCA,OAAQD,EAAgC,EAAhCA,WAAYE,EAAoB,EAApBA,QAASN,EAAW,EAAXA,SAAW,EAC3CZ,oBAAS,GADkC,mBACpEmB,EADoE,KAC1DC,EAD0D,KAS3E,OACE,wBAAIhC,UAAW8B,GACZC,EAAW,kBAACR,EAAD,CAAUC,SARL,SAACP,GACpBA,EAAEC,iBACFM,EAASP,EAAEE,OAAON,KAAKO,MAAOS,GAC9BG,GAAY,IAKoCP,SAAUA,IAAc,2BAAIA,GAC1E,yBAAKzB,UAAW+B,EAAW,MAAQ,aACjC,4BAAQ/B,UAAU,SAASiC,QAAS,kBAAMD,GAAY,KAAtD,QACA,4BAAQhC,UAAU,UAAUiC,QAAS,WAAOL,EAAWC,GAAS1C,EAAoB,WAApF,KACA,4BAAQa,UAAU,SAASiC,QAAS,WAAOP,EAAWG,GAAS1C,EAAoB,WAAnF,a,MCRR,IAKesB,eALS,SAAAC,GACtB,MAAO,CACLC,MAAOD,KAG6B,KAAzBD,EAdf,YAA4B,IAATE,EAAQ,EAARA,MACjB,OAAIA,EAAMuB,OAGHvB,EAAMwB,KAAI,SAAAtB,GACf,IAAMuB,EAAYvB,EAAKwB,KAAO,oBAAsB,eACpD,OAAO,kBAAC,EAAD,CAAMZ,SAAUZ,EAAKP,KAAMwB,QAASM,EAAWE,IAAKzB,EAAK0B,IAAKV,OAAQhB,EAAK0B,SAJ3E,mH,MCaIC,MAdf,WACE,OACE,yBAAKxC,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,yBAAKA,UAAU,aACb,wBAAIA,UAAU,aACZ,kBAAC,EAAD,UCHJyC,EAAQC,uBVLS,WAAmC,IAAlChC,EAAiC,uDAAzBf,EAAcgD,EAAW,uCACvD,OAAOA,EAAOpC,MACZ,KAAK1B,EACH,MAAM,GAAN,mBAAW6B,GAAX,CAAkB,CAAC6B,IAAKK,KAAKC,MAAOvC,KAAMqC,EAAOrC,KAAM+B,MAAM,KAC/D,KAAKvD,EACH,IAAM6B,EAAQD,EAAMoC,QAAO,SAAAjC,GAAI,OAAIA,EAAK0B,MAAQI,EAAOhB,MACvD,OAAO,YAAIhB,GACb,KAAK5B,EACH,OAAO2B,EAAMyB,KAAI,SAAAtB,GACf,OAAOA,EAAK0B,MAAQI,EAAOhB,GAApB,2BAA6Bd,GAA7B,IAAmCwB,MAAOxB,EAAKwB,OAAQxB,KAElE,KAAK7B,EACH,OAAO0B,EAAMyB,KAAI,SAAAtB,GACf,OAAOA,EAAK0B,MAAQI,EAAOhB,GAApB,2BAA6Bd,GAA7B,IAAmCP,KAAMqC,EAAOrC,OAAOO,KAElE,QAAS,OAAOH,KUVeqC,iCAEnCC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUT,MAAOA,GACf,kBAAC,EAAD,QAGJU,SAASC,eAAe,W","file":"static/js/main.6ca91aec.chunk.js","sourcesContent":["export const ADD_TODO = 'ADD_TODO'\r\nexport const REMOVE_TODO = 'REMOVE_TODO'\r\nexport const TOGGLE_TODO = 'TOGGLE_TODO'\r\nexport const EDIT_TODO = 'EDIT_TODO'\r\n","module.exports = __webpack_public_path__ + \"static/media/notepad.fd0c3d2b.svg\";","export function writeToLocalStorage(name, data){\r\n  localStorage.setItem(name, JSON.stringify(data))\r\n}\r\n\r\nexport function readLocalStorage(name){\r\n  const data = localStorage.getItem(name)\r\n  return JSON.parse(data)\r\n}","import { readLocalStorage } from \"../components/middleware/localStorage\";\r\n\r\nconst { ADD_TODO, REMOVE_TODO, TOGGLE_TODO, EDIT_TODO } = require(\"./actionTypes\");\r\nconst initialState = readLocalStorage('todos') ?? []\r\n\r\nexport const TodoApp = (state = initialState, action) => {\r\n  switch(action.type){\r\n    case ADD_TODO:\r\n      return [...state, {_id: Date.now(), text: action.text, done: false}]\r\n    case REMOVE_TODO: \r\n      const todos = state.filter(todo => todo._id !== action.id)\r\n      return [...todos]\r\n    case TOGGLE_TODO:\r\n      return state.map(todo => {\r\n        return todo._id === action.id ? {...todo, done: !todo.done} : todo\r\n      })\r\n    case EDIT_TODO:\r\n      return state.map(todo => {\r\n        return todo._id === action.id ? {...todo, text: action.text}: todo\r\n      })\r\n    default: return state\r\n  }\r\n}","import Header from './Header'\r\nexport default Header","import React from 'react'\r\nimport logo from '../../assets/notepad.svg'\r\nimport './style.css'\r\n\r\nexport default function Header() {\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"container\">\r\n        <div className=\"logo\">\r\n          <img src={logo} alt=\"logo\"/>\r\n          <span>todo list</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport { addTodo } from '../../redux/actions'\r\nimport { writeToLocalStorage } from '../middleware/localStorage'\r\nimport './style.css'\r\n\r\nfunction AddTodoForm({addTodo, todos}) {\r\n  const [todo, setTodo] = useState('')\r\n  useEffect(() => {\r\n    writeToLocalStorage('todos', todos)\r\n  })\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault()\r\n    e.target.todo.value = ''\r\n    addTodo(todo)\r\n  }\r\n\r\n  function formHandler(e) {\r\n    setTodo(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <div className=\"add-todo-form\">\r\n      <div className=\"container\">\r\n        <form className=\"form\" onSubmit={submitHandler}>\r\n          <input type=\"text\" name=\"todo\" vaule={todo} onChange={formHandler}/>\r\n          <button type=\"submit\">Add</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  addTodo\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    todos: state\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTodoForm)","import { ADD_TODO, REMOVE_TODO, TOGGLE_TODO, EDIT_TODO } from \"./actionTypes\";\r\n\r\nexport function addTodo(text){\r\n  return {\r\n    type: ADD_TODO,\r\n    text\r\n  }\r\n}\r\n\r\nexport function removeTodo(id){\r\n  return {\r\n    type: REMOVE_TODO,\r\n    id\r\n  }\r\n}\r\n\r\nexport function toggleTodo(id){\r\n  return {\r\n    type: TOGGLE_TODO,\r\n    id\r\n  }\r\n}\r\n\r\nexport function editTodo(text, id){\r\n  return {\r\n    type: EDIT_TODO,\r\n    id,\r\n    text\r\n  }\r\n}","import AddTodoForm from './AddTodoForm'\r\nexport default AddTodoForm","import React, {useState} from 'react'\r\nimport './style.css'\r\n\r\nexport default function EditForm({editTodo, todoText}) {\r\n  const [todo, setTodo] = useState(todoText)\r\n  return (\r\n    <form onSubmit={editTodo} className=\"editForm\">\r\n      <input type=\"text\" name=\"todo\" onChange={e => setTodo(e.target.value  )} value={todo}/>\r\n      <button type=\"submit\">&#10004;</button>\r\n    </form>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {removeTodo, toggleTodo, editTodo} from '../../redux/actions'\r\nimport { writeToLocalStorage } from '../middleware/localStorage'\r\nimport EditForm from '../EditForm/EditForm'\r\nimport './style.css'\r\n\r\nfunction Todo({todoText, removeTodo, todoId, toggleTodo, classes, editTodo}) {\r\n  const [editMode, setEditMode] = useState(false)\r\n\r\n  const editTodoFunc = (e) => {\r\n    e.preventDefault()\r\n    editTodo(e.target.todo.value, todoId)\r\n    setEditMode(false)\r\n  }\r\n\r\n  return (\r\n    <li className={classes}>\r\n      {editMode ? <EditForm editTodo={editTodoFunc} todoText={todoText}/> : <p>{todoText}</p>}\r\n      <div className={editMode ? \"dis\" : \"btn-block\"}>\r\n        <button className=\"btn ed\" onClick={() => setEditMode(true)}>edit</button>\r\n        <button className=\"btn imp\" onClick={() => {toggleTodo(todoId); writeToLocalStorage('todos')}}>&#33;</button>\r\n        <button className=\"btn rm\" onClick={() => {removeTodo(todoId); writeToLocalStorage('todos')}}>&times;</button>\r\n      </div>\r\n    </li>\r\n  )\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    todos: state\r\n  }\r\n}\r\nexport default connect(mapStateToProps, {removeTodo, toggleTodo, editTodo})(Todo)\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport Todo from '../Todo/Todo'\r\nimport './style.css'\r\n\r\nfunction TodoList({todos}) {\r\n  if(!todos.length){\r\n    return <h5>Список дел пуст</h5>\r\n  }\r\n  return todos.map(todo => {\r\n    const classList = todo.done ? 'todo-element done' : 'todo-element'\r\n    return <Todo todoText={todo.text} classes={classList} key={todo._id} todoId={todo._id}/>\r\n  })\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    todos: state\r\n  }\r\n}\r\nexport default connect(mapStateToProps, null)(TodoList)","import React from 'react';\nimport Header from './components/Header';\nimport AddTodoForm from './components/AddTodoForm';\nimport TodoList from './components/TodoList/TodoList';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <AddTodoForm />\n      <div className=\"container\">\n        <ul className=\"todo-list\">\n          <TodoList />\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\nimport {createStore} from 'redux'\nimport {composeWithDevTools} from 'redux-devtools-extension'\nimport { TodoApp } from './redux/reducers';\nimport './index.css';\nimport App from './App';\n\n\nconst store = createStore(TodoApp, composeWithDevTools())\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}